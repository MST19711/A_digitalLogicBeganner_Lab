`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 2023/09/16 20:18:12
// Design Name: 
// Module Name: regfile32_tb
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module DigitalTimer_tb();
/*
    wire clk;//连接到时钟端口 CLK100MHZ，引脚 E3
    wire RST;//复位按钮，单击有效
    wire StartOrPause;//计时器开始或暂停，单击 1 次开始，再按 1 次暂停
    wire ReadPara;//读取参数，当参数设置结束后，单击 1 次，读取数据
    wire TimeFormat;//=0 表示 24 小时制，=1 表示 12 小时制
    wire [1:0] mode;//功能选择，00 数字时钟，01 倒计时，10 计时器，11 设置闹钟
    wire [1:0] ParaSelect;// 参数设置，00 无；01 设置秒数；10 设置分钟；11 设置小时
    wire [1:0] AlarmNo;// 闹钟序号，0~3
    wire [3:0] data_h;//设置参数高位，使用 BCD 码表示
    wire [3:0] data_l;//设置参数低位，使用 BCD 码表示
    wire Afternoon;//12 小时制时，下午时间输出为 1
    wire [2:0] TimeKeeper;//整点输出 3 色指示灯
    wire [2:0] AlarmDisplay;//闹钟输出 3 色指示灯
    wire [7:0] segs;//七段数码管输入值，显示数字
    wire [7:0] an;//七段数码管控制位，控制时、分、秒
    DigitalTimer timer_test(
        .clk(clk),//连接到时钟端口 CLK100MHZ，引脚 E3
        .wire RST(RST),//复位按钮，单击有效
        .StartOrPause(StartOrPause),//计时器开始或暂停，单击 1 次开始，再按 1 次暂停
        .ReadPara(ReadPara),//读取参数，当参数设置结束后，单击 1 次，读取数据
        .TimeFormat(TimeFormat),//=0 表示 24 小时制，=1 表示 12 小时制
        .[1:0] mode(mode),//功能选择，00 数字时钟，01 倒计时，10 计时器，11 设置闹钟
        .[1:0] ParaSelect(ParaSelect),// 参数设置，00 无；01 设置秒数；10 设置分钟；11 设置小时
        .[1:0] AlarmNo(AlarmNo),// 闹钟序号，0~3
        .[3:0] data_h(data_h),//设置参数高位，使用 BCD 码表示
        .[3:0] data_l(data_l),//设置参数低位，使用 BCD 码表示
        .Afternoon(Afternoon),//12 小时制时，下午时间输出为 1
        .[2:0] TimeKeeper(TimeKeeper),//整点输出 3 色指示灯
        .[2:0] AlarmDisplay(AlarmDisplay),//闹钟输出 3 色指示灯
        .[7:0] segs(segs),//七段数码管输入值，显示数字
        .[7:0] an(an)//七段数码管控制位，控制时、分、秒
    );
*/
   

endmodule
